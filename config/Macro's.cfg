[delayed_gcode CLEAR_DISP]
gcode =
    M117

[gcode_macro tuningpa]
gcode =
  SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=500 ACCEL_TO_DECEL=500
  TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0 FACTOR=.005

[gcode_macro BEDMESHLOAD]
gcode =
  BED_MESH_PROFILE LOAD={printer.heater_bed.target}C

  [gcode_macro TURN_OFF_MOTORS]
gcode =
  M18

[gcode_macro PARK_MACRO]
default_parameter_X = 20
default_parameter_Y = 304
default_parameter_Z = 100
gcode =
  SAVE_GCODE_STATE NAME=PARK_MACRO_state
  G91                     ; relative positioning
  G1 E-2 F1000            ; retract filament
  G1 Z10                  ; lift z slightly             
  G90                     ; absolute positioning
  G1 X{X} Y{Y} Z{Z} F3000 ; park the head
  RESTORE_GCODE_STATE name=PARK_MACRO_state

  ## Filament loading/unloading macro's
##--------------------------------------------------------------------
[gcode_macro LOAD_FILAMENT]
default_parameter_E = 80
gcode =
  {% if printer.extruder.temperature >= 170 %}
    M117 "Loading..."
    M83
    G1 E{E|int/3*2} F300
    G1 E{E|int/3} F150
    M82
    M117 "Finished loading."
  {% else %}
    M117 "Load disabled with temperature lower than 170C!"
  {%endif %}
  UPDATE_DELAYED_GCODE ID=CLEAR_DISP DURATION=10

[gcode_macro UNLOAD_FILAMENT]
default_parameter_DISTANCE = 90
gcode =
  {% if printer.extruder.temperature >= 170 %}
  M117 "Unloading."
    M83
    G1 E10 F300
    G1 E{DISTANCE|int * -1} F2000
    M82
    M117 "Finished unloading."
  {% else %}
    M117 "Unload disabled with temperature lower than 170C!"
  {%endif %}
  UPDATE_DELAYED_GCODE ID=CLEAR_DISP DURATION=10
##--------------------------------------------------------------------		
## In print macro's. Pause/resume/cancel filament runout etc.
##--------------------------------------------------------------------
[gcode_macro CANCEL_PRINT]
rename_existing =     BASE_CANCEL_PRINT
default_parameter_X = 175
default_parameter_Y = 30
default_parameter_Z = 10
default_parameter_E = 1
gcode =
  G91 
  G1 E-{E} F2100
  G1 Z{Z}
  G90
  G1 X{X} Y{Y} F6000
  M104 S0 #heater
  M140 S0 #bed
  #M141 S0
  M106 S0 #partcooling fan
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  BASE_CANCEL_PRINT

[gcode_macro PAUSE]
rename_existing =     BASE_PAUSE
default_parameter_X = 175
default_parameter_Y = 20
default_parameter_Z = 10
default_parameter_E = 1
gcode =
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 E-{E} F2100
  G1 Z{Z}
  G90
  G1 X{X} Y{Y} F6000

[gcode_macro RESUME]
rename_existing =     BASE_RESUME
default_parameter_E = 1
gcode =
  G91
  G1 E{E} F2100
  G90
  RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
  BASE_RESUME
	
[gcode_macro M600]
default_parameter_X = 50
default_parameter_Y = 10
default_parameter_Z = 20
gcode =
  PAUSE X={X} Y={Y} Z={Z}
  UNLOAD_FILAMENT
##--------------------------------------------------------------------

[gcode_macro CHECK_FLEXPLATE]
#Checks if the probe can find the flexplate
gcode:   
    G90
    G0 X175 Y175 Z10 F6000
    G0 Z0.5 F6000
    QUERY_PROBE
    _CHECK_FLEXPLATE_PRESENT
    G0 Z20 F6000
    
[gcode_macro _CHECK_FLEXPLATE_PRESENT]
#cancels print if flexplate is missing (or probe is faulty), run QUERY_PROBE close to the bed before running this macro
gcode:
    {% if not printer.probe.last_query %}
      TURN_OFF_HEATERS
      G0 Z25 F6000
      BASE_CANCEL_PRINT
      _FLEXPLATE_ERROR
    {% endif %}

[gcode_macro _FLEXPLATE_ERROR]
# Raises the error, that the flexplate is not there.
gcode:
   { action_raise_error('A stupid idiot forgot to put the flexplate on the bed! (Or the probe is not working.)') }

[gcode_macro BED_MESH_CALIBRATE]
default_parameter_SAVE = 1
rename_existing =        BASE_BED_MESH_CALIBRATE
gcode =
  BED_MESH_CLEAR             	                            ; Clear bed mesh data
  #BED_MESH_PROFILE REMOVE={printer.heater_bed.target}C   ; Remove saved mesh
  G32							                                        ; Auto Adjust
  BASE_BED_MESH_CALIBRATE			                            ; Run Bed Mesh
  BED_MESH_PROFILE SAVE={printer.heater_bed.target}C		  ; Save Bed Mesh
    {% if SAVE == 1 %}
    SAVE_CONFIG
  {% endif %}





